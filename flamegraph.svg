<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="10000" height="1174" onload="init(evt)" viewBox="0 0 10000 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1174" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1157.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="9990" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="9990" y="1157.00"> </text><svg id="frames" x="10" width="9980" total_samples="81"><g><title>`0x7FF817C5CC70 (2 samples, 2.47%)</title><rect x="0.0000%" y="1109" width="2.4691%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.0300%" y="1119.50">`0x7FF817C5CC70</text></g><g><title>`0x7FF817C5D407 (1 samples, 1.23%)</title><rect x="2.4691%" y="1077" width="1.2346%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="1"/><text x="2.4991%" y="1087.50">`0x7FF817C5D407</text></g><g><title>`0x7FF817CB1034 (1 samples, 1.23%)</title><rect x="2.4691%" y="1061" width="1.2346%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="2.4991%" y="1071.50">`0x7FF817CB1034</text></g><g><title>`0x7FF817C426C6 (1 samples, 1.23%)</title><rect x="3.7037%" y="1013" width="1.2346%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="1"/><text x="3.7337%" y="1023.50">`0x7FF817C426C6</text></g><g><title>`0x7FF817C4279B (1 samples, 1.23%)</title><rect x="4.9383%" y="1013" width="1.2346%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="4.9683%" y="1023.50">`0x7FF817C4279B</text></g><g><title>`0x7FF817C70128 (3 samples, 3.70%)</title><rect x="3.7037%" y="1029" width="3.7037%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="3"/><text x="3.7337%" y="1039.50">`0x7FF817C70128</text></g><g><title>`0x7FF817C4288A (1 samples, 1.23%)</title><rect x="6.1728%" y="1013" width="1.2346%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="1"/><text x="6.2028%" y="1023.50">`0x7FF817C4288A</text></g><g><title>`0x7FF817C64518 (1 samples, 1.23%)</title><rect x="6.1728%" y="997" width="1.2346%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="1"/><text x="6.2028%" y="1007.50">`0x7FF817C64518</text></g><g><title>`0x7FF817CADFA4 (1 samples, 1.23%)</title><rect x="6.1728%" y="981" width="1.2346%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="1"/><text x="6.2028%" y="991.50">`0x7FF817CADFA4</text></g><g><title>`0x7FF817C70BD6 (1 samples, 1.23%)</title><rect x="7.4074%" y="1013" width="1.2346%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="1"/><text x="7.4374%" y="1023.50">`0x7FF817C70BD6</text></g><g><title>`0x7FF817C70516 (1 samples, 1.23%)</title><rect x="7.4074%" y="997" width="1.2346%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="1"/><text x="7.4374%" y="1007.50">`0x7FF817C70516</text></g><g><title>`0x7FF817C706F7 (1 samples, 1.23%)</title><rect x="7.4074%" y="981" width="1.2346%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="1"/><text x="7.4374%" y="991.50">`0x7FF817C706F7</text></g><g><title>`0x7FF817C7086B (1 samples, 1.23%)</title><rect x="7.4074%" y="965" width="1.2346%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="1"/><text x="7.4374%" y="975.50">`0x7FF817C7086B</text></g><g><title>`0x7FF817CADD44 (1 samples, 1.23%)</title><rect x="7.4074%" y="949" width="1.2346%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="7.4374%" y="959.50">`0x7FF817CADD44</text></g><g><title>`0x7FF817C5D79A (5 samples, 6.17%)</title><rect x="3.7037%" y="1077" width="6.1728%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="5"/><text x="3.7337%" y="1087.50">`0x7FF817C5D79A</text></g><g><title>`0x7FF817C73720 (5 samples, 6.17%)</title><rect x="3.7037%" y="1061" width="6.1728%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="5"/><text x="3.7337%" y="1071.50">`0x7FF817C73720</text></g><g><title>`0x7FF817C700D3 (5 samples, 6.17%)</title><rect x="3.7037%" y="1045" width="6.1728%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="5"/><text x="3.7337%" y="1055.50">`0x7FF817C700D3</text></g><g><title>`0x7FF817C70160 (2 samples, 2.47%)</title><rect x="7.4074%" y="1029" width="2.4691%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="2"/><text x="7.4374%" y="1039.50">`0x7FF817C70160</text></g><g><title>`0x7FF817C70CA0 (1 samples, 1.23%)</title><rect x="8.6420%" y="1013" width="1.2346%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="1"/><text x="8.6720%" y="1023.50">`0x7FF817C70CA0</text></g><g><title>`0x7FF817C71243 (1 samples, 1.23%)</title><rect x="8.6420%" y="997" width="1.2346%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="1"/><text x="8.6720%" y="1007.50">`0x7FF817C71243</text></g><g><title>`0x7FF817C24C14 (1 samples, 1.23%)</title><rect x="8.6420%" y="981" width="1.2346%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="8.6720%" y="991.50">`0x7FF817C24C14</text></g><g><title>`0x7FF817C27BA2 (1 samples, 1.23%)</title><rect x="8.6420%" y="965" width="1.2346%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="8.6720%" y="975.50">`0x7FF817C27BA2</text></g><g><title>`0x7FF817C1F49F (1 samples, 1.23%)</title><rect x="8.6420%" y="949" width="1.2346%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="8.6720%" y="959.50">`0x7FF817C1F49F</text></g><g><title>`0x7FF817C22A66 (1 samples, 1.23%)</title><rect x="8.6420%" y="933" width="1.2346%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="8.6720%" y="943.50">`0x7FF817C22A66</text></g><g><title>`0x7FF817C22BD9 (1 samples, 1.23%)</title><rect x="8.6420%" y="917" width="1.2346%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="8.6720%" y="927.50">`0x7FF817C22BD9</text></g><g><title>`0x7FF817CB03B4 (1 samples, 1.23%)</title><rect x="8.6420%" y="901" width="1.2346%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="1"/><text x="8.6720%" y="911.50">`0x7FF817CB03B4</text></g><g><title>`0x7FF817C711EE (1 samples, 1.23%)</title><rect x="9.8765%" y="901" width="1.2346%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="1"/><text x="9.9065%" y="911.50">`0x7FF817C711EE</text></g><g><title>`0x7FF817CADEE4 (1 samples, 1.23%)</title><rect x="9.8765%" y="885" width="1.2346%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="1"/><text x="9.9065%" y="895.50">`0x7FF817CADEE4</text></g><g><title>`0x7FF817C71243 (1 samples, 1.23%)</title><rect x="11.1111%" y="901" width="1.2346%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="1"/><text x="11.1411%" y="911.50">`0x7FF817C71243</text></g><g><title>`0x7FF817C24C14 (1 samples, 1.23%)</title><rect x="11.1111%" y="885" width="1.2346%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="1"/><text x="11.1411%" y="895.50">`0x7FF817C24C14</text></g><g><title>`0x7FF817C27B29 (1 samples, 1.23%)</title><rect x="11.1111%" y="869" width="1.2346%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="1"/><text x="11.1411%" y="879.50">`0x7FF817C27B29</text></g><g><title>`0x7FF817C288A8 (1 samples, 1.23%)</title><rect x="11.1111%" y="853" width="1.2346%" height="15" fill="rgb(229,88,8)" fg:x="9" fg:w="1"/><text x="11.1411%" y="863.50">`0x7FF817C288A8</text></g><g><title>`0x7FF817C24479 (1 samples, 1.23%)</title><rect x="11.1111%" y="837" width="1.2346%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="1"/><text x="11.1411%" y="847.50">`0x7FF817C24479</text></g><g><title>`0x7FF817C24AAA (1 samples, 1.23%)</title><rect x="11.1111%" y="821" width="1.2346%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="1"/><text x="11.1411%" y="831.50">`0x7FF817C24AAA</text></g><g><title>`0x7FF817C24D42 (1 samples, 1.23%)</title><rect x="11.1111%" y="805" width="1.2346%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="1"/><text x="11.1411%" y="815.50">`0x7FF817C24D42</text></g><g><title>`0x7FF817CADAA4 (1 samples, 1.23%)</title><rect x="11.1111%" y="789" width="1.2346%" height="15" fill="rgb(233,36,39)" fg:x="9" fg:w="1"/><text x="11.1411%" y="799.50">`0x7FF817CADAA4</text></g><g><title>`0x7FF817C2FB53 (3 samples, 3.70%)</title><rect x="9.8765%" y="949" width="3.7037%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="3"/><text x="9.9065%" y="959.50">`0x7FF817C2FB53</text></g><g><title>`0x7FF817C7020F (3 samples, 3.70%)</title><rect x="9.8765%" y="933" width="3.7037%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="3"/><text x="9.9065%" y="943.50">`0x7FF817C7020F</text></g><g><title>`0x7FF817C70F70 (3 samples, 3.70%)</title><rect x="9.8765%" y="917" width="3.7037%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="3"/><text x="9.9065%" y="927.50">`0x7FF817C70F70</text></g><g><title>`0x7FF817C71261 (1 samples, 1.23%)</title><rect x="12.3457%" y="901" width="1.2346%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="1"/><text x="12.3757%" y="911.50">`0x7FF817C71261</text></g><g><title>`0x7FF817CAD784 (1 samples, 1.23%)</title><rect x="12.3457%" y="885" width="1.2346%" height="15" fill="rgb(231,60,39)" fg:x="10" fg:w="1"/><text x="12.3757%" y="895.50">`0x7FF817CAD784</text></g><g><title>`0x7FF8155C05A2 (4 samples, 4.94%)</title><rect x="9.8765%" y="1045" width="4.9383%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="4"/><text x="9.9065%" y="1055.50">`0x7FF8155C05A2</text></g><g><title>`0x7FF8155C19C7 (4 samples, 4.94%)</title><rect x="9.8765%" y="1029" width="4.9383%" height="15" fill="rgb(235,93,37)" fg:x="8" fg:w="4"/><text x="9.9065%" y="1039.50">`0x7FF8155C19C7</text></g><g><title>`0x7FF8155BC050 (4 samples, 4.94%)</title><rect x="9.8765%" y="1013" width="4.9383%" height="15" fill="rgb(213,116,39)" fg:x="8" fg:w="4"/><text x="9.9065%" y="1023.50">`0x7FF8155BC050</text></g><g><title>`0x7FF81575DB72 (4 samples, 4.94%)</title><rect x="9.8765%" y="997" width="4.9383%" height="15" fill="rgb(222,207,29)" fg:x="8" fg:w="4"/><text x="9.9065%" y="1007.50">`0x7FF81575DB72</text></g><g><title>`0x7FF817C26AF4 (4 samples, 4.94%)</title><rect x="9.8765%" y="981" width="4.9383%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="4"/><text x="9.9065%" y="991.50">`0x7FF817C26AF4</text></g><g><title>`0x7FF817C273E4 (4 samples, 4.94%)</title><rect x="9.8765%" y="965" width="4.9383%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="4"/><text x="9.9065%" y="975.50">`0x7FF817C273E4</text></g><g><title>`0x7FF817C2FBAE (1 samples, 1.23%)</title><rect x="13.5802%" y="949" width="1.2346%" height="15" fill="rgb(250,191,14)" fg:x="11" fg:w="1"/><text x="13.6102%" y="959.50">`0x7FF817C2FBAE</text></g><g><title>`0x7FF817C4D947 (1 samples, 1.23%)</title><rect x="13.5802%" y="933" width="1.2346%" height="15" fill="rgb(239,60,40)" fg:x="11" fg:w="1"/><text x="13.6102%" y="943.50">`0x7FF817C4D947</text></g><g><title>`0x7FF817C7D110 (1 samples, 1.23%)</title><rect x="13.5802%" y="917" width="1.2346%" height="15" fill="rgb(206,27,48)" fg:x="11" fg:w="1"/><text x="13.6102%" y="927.50">`0x7FF817C7D110</text></g><g><title>`0x7FF817C7D08A (1 samples, 1.23%)</title><rect x="13.5802%" y="901" width="1.2346%" height="15" fill="rgb(225,35,8)" fg:x="11" fg:w="1"/><text x="13.6102%" y="911.50">`0x7FF817C7D08A</text></g><g><title>`0x7FF817C7D2F7 (1 samples, 1.23%)</title><rect x="13.5802%" y="885" width="1.2346%" height="15" fill="rgb(250,213,24)" fg:x="11" fg:w="1"/><text x="13.6102%" y="895.50">`0x7FF817C7D2F7</text></g><g><title>`0x7FF817C29A1D (1 samples, 1.23%)</title><rect x="13.5802%" y="869" width="1.2346%" height="15" fill="rgb(247,123,22)" fg:x="11" fg:w="1"/><text x="13.6102%" y="879.50">`0x7FF817C29A1D</text></g><g><title>`0x7FF815D978EF (1 samples, 1.23%)</title><rect x="13.5802%" y="853" width="1.2346%" height="15" fill="rgb(231,138,38)" fg:x="11" fg:w="1"/><text x="13.6102%" y="863.50">`0x7FF815D978EF</text></g><g><title>`0x7FF815DB0AAE (1 samples, 1.23%)</title><rect x="13.5802%" y="837" width="1.2346%" height="15" fill="rgb(231,145,46)" fg:x="11" fg:w="1"/><text x="13.6102%" y="847.50">`0x7FF815DB0AAE</text></g><g><title>`0x7FF815DB0D62 (1 samples, 1.23%)</title><rect x="13.5802%" y="821" width="1.2346%" height="15" fill="rgb(251,118,11)" fg:x="11" fg:w="1"/><text x="13.6102%" y="831.50">`0x7FF815DB0D62</text></g><g><title>`0x7FF8155C045F (5 samples, 6.17%)</title><rect x="9.8765%" y="1061" width="6.1728%" height="15" fill="rgb(217,147,25)" fg:x="8" fg:w="5"/><text x="9.9065%" y="1071.50">`0x7FF8155C045F</text></g><g><title>`0x7FF8155C05BC (1 samples, 1.23%)</title><rect x="14.8148%" y="1045" width="1.2346%" height="15" fill="rgb(247,81,37)" fg:x="12" fg:w="1"/><text x="14.8448%" y="1055.50">`0x7FF8155C05BC</text></g><g><title>`0x7FF8165BE3EB (1 samples, 1.23%)</title><rect x="14.8148%" y="1029" width="1.2346%" height="15" fill="rgb(209,12,38)" fg:x="12" fg:w="1"/><text x="14.8448%" y="1039.50">`0x7FF8165BE3EB</text></g><g><title>`0x7FF817C6EF7D (1 samples, 1.23%)</title><rect x="14.8148%" y="1013" width="1.2346%" height="15" fill="rgb(227,1,9)" fg:x="12" fg:w="1"/><text x="14.8448%" y="1023.50">`0x7FF817C6EF7D</text></g><g><title>`0x7FF817C6F1CA (1 samples, 1.23%)</title><rect x="14.8148%" y="997" width="1.2346%" height="15" fill="rgb(248,47,43)" fg:x="12" fg:w="1"/><text x="14.8448%" y="1007.50">`0x7FF817C6F1CA</text></g><g><title>`0x7FF817C29A1D (1 samples, 1.23%)</title><rect x="14.8148%" y="981" width="1.2346%" height="15" fill="rgb(221,10,30)" fg:x="12" fg:w="1"/><text x="14.8448%" y="991.50">`0x7FF817C29A1D</text></g><g><title>`0x7FF81577954D (1 samples, 1.23%)</title><rect x="14.8148%" y="965" width="1.2346%" height="15" fill="rgb(210,229,1)" fg:x="12" fg:w="1"/><text x="14.8448%" y="975.50">`0x7FF81577954D</text></g><g><title>`0x7FF81577975C (1 samples, 1.23%)</title><rect x="14.8148%" y="949" width="1.2346%" height="15" fill="rgb(222,148,37)" fg:x="12" fg:w="1"/><text x="14.8448%" y="959.50">`0x7FF81577975C</text></g><g><title>replace_every-914c869a46d85e1c.exe`clap_builder::builder::command::Command::get_matches_mut (1 samples, 1.23%)</title><rect x="16.0494%" y="869" width="1.2346%" height="15" fill="rgb(234,67,33)" fg:x="13" fg:w="1"/><text x="16.0794%" y="879.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 1.23%)</title><rect x="16.0494%" y="853" width="1.2346%" height="15" fill="rgb(247,98,35)" fg:x="13" fg:w="1"/><text x="16.0794%" y="863.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place (1 samples, 1.23%)</title><rect x="16.0494%" y="837" width="1.2346%" height="15" fill="rgb(247,138,52)" fg:x="13" fg:w="1"/><text x="16.0794%" y="847.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 1.23%)</title><rect x="16.0494%" y="821" width="1.2346%" height="15" fill="rgb(213,79,30)" fg:x="13" fg:w="1"/><text x="16.0794%" y="831.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (1 samples, 1.23%)</title><rect x="16.0494%" y="805" width="1.2346%" height="15" fill="rgb(246,177,23)" fg:x="13" fg:w="1"/><text x="16.0794%" y="815.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`clap_builder::builder::command::Command::_do_parse (1 samples, 1.23%)</title><rect x="16.0494%" y="789" width="1.2346%" height="15" fill="rgb(230,62,27)" fg:x="13" fg:w="1"/><text x="16.0794%" y="799.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`clap_builder::parser::parser::Parser::get_matches_with (1 samples, 1.23%)</title><rect x="16.0494%" y="773" width="1.2346%" height="15" fill="rgb(216,154,8)" fg:x="13" fg:w="1"/><text x="16.0794%" y="783.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place (1 samples, 1.23%)</title><rect x="16.0494%" y="757" width="1.2346%" height="15" fill="rgb(244,35,45)" fg:x="13" fg:w="1"/><text x="16.0794%" y="767.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(clap_builder::util::graph::ChildGraph (1 samples, 1.23%)</title><rect x="16.0494%" y="741" width="1.2346%" height="15" fill="rgb(251,115,12)" fg:x="13" fg:w="1"/><text x="16.0794%" y="751.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;clap_builder::util::graph::Child (1 samples, 1.23%)</title><rect x="16.0494%" y="725" width="1.2346%" height="15" fill="rgb(240,54,50)" fg:x="13" fg:w="1"/><text x="16.0794%" y="735.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;clap_builder::util::graph::Child (1 samples, 1.23%)</title><rect x="16.0494%" y="709" width="1.2346%" height="15" fill="rgb(233,84,52)" fg:x="13" fg:w="1"/><text x="16.0794%" y="719.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`clap_builder::parser::validator::Validator::validate (1 samples, 1.23%)</title><rect x="16.0494%" y="693" width="1.2346%" height="15" fill="rgb(207,117,47)" fg:x="13" fg:w="1"/><text x="16.0794%" y="703.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`clap_builder::parser::validator::Validator::validate_required (1 samples, 1.23%)</title><rect x="16.0494%" y="677" width="1.2346%" height="15" fill="rgb(249,43,39)" fg:x="13" fg:w="1"/><text x="16.0794%" y="687.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`alloc::vec::Vec&lt;clap_builder::util::id::Id,alloc::alloc::Global&gt;::new (1 samples, 1.23%)</title><rect x="16.0494%" y="661" width="1.2346%" height="15" fill="rgb(209,38,44)" fg:x="13" fg:w="1"/><text x="16.0794%" y="671.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::divan::Divan::main (2 samples, 2.47%)</title><rect x="16.0494%" y="901" width="2.4691%" height="15" fill="rgb(236,212,23)" fg:x="13" fg:w="2"/><text x="16.0794%" y="911.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::divan::Divan::config_with_args (2 samples, 2.47%)</title><rect x="16.0494%" y="885" width="2.4691%" height="15" fill="rgb(242,79,21)" fg:x="13" fg:w="2"/><text x="16.0794%" y="895.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::cli::command (1 samples, 1.23%)</title><rect x="17.2840%" y="869" width="1.2346%" height="15" fill="rgb(211,96,35)" fg:x="14" fg:w="1"/><text x="17.3140%" y="879.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`clap_builder::builder::command::Command::arg (1 samples, 1.23%)</title><rect x="17.2840%" y="853" width="1.2346%" height="15" fill="rgb(253,215,40)" fg:x="14" fg:w="1"/><text x="17.3140%" y="863.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`clap_builder::builder::command::Command::arg_internal (1 samples, 1.23%)</title><rect x="17.2840%" y="837" width="1.2346%" height="15" fill="rgb(211,81,21)" fg:x="14" fg:w="1"/><text x="17.3140%" y="847.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`clap_builder::mkeymap::MKeyMap::push (1 samples, 1.23%)</title><rect x="17.2840%" y="821" width="1.2346%" height="15" fill="rgb(208,190,38)" fg:x="14" fg:w="1"/><text x="17.3140%" y="831.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`alloc::vec::Vec&lt;clap_builder::builder::arg::Arg,alloc::alloc::Global&gt;::push (1 samples, 1.23%)</title><rect x="17.2840%" y="805" width="1.2346%" height="15" fill="rgb(235,213,38)" fg:x="14" fg:w="1"/><text x="17.3140%" y="815.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::mut_ptr::impl$0::add (1 samples, 1.23%)</title><rect x="17.2840%" y="789" width="1.2346%" height="15" fill="rgb(237,122,38)" fg:x="14" fg:w="1"/><text x="17.3140%" y="799.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`alloc::raw_vec::RawVec&lt;clap_builder::builder::arg::Arg,alloc::alloc::Global&gt;::grow_one&lt;clap_builder::builder::arg::Arg,alloc::alloc::Global&gt; (1 samples, 1.23%)</title><rect x="17.2840%" y="773" width="1.2346%" height="15" fill="rgb(244,218,35)" fg:x="14" fg:w="1"/><text x="17.3140%" y="783.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 1.23%)</title><rect x="17.2840%" y="757" width="1.2346%" height="15" fill="rgb(240,68,47)" fg:x="14" fg:w="1"/><text x="17.3140%" y="767.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 1.23%)</title><rect x="17.2840%" y="741" width="1.2346%" height="15" fill="rgb(210,16,53)" fg:x="14" fg:w="1"/><text x="17.3140%" y="751.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 1.23%)</title><rect x="17.2840%" y="725" width="1.2346%" height="15" fill="rgb(235,124,12)" fg:x="14" fg:w="1"/><text x="17.3140%" y="735.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 1.23%)</title><rect x="17.2840%" y="709" width="1.2346%" height="15" fill="rgb(224,169,11)" fg:x="14" fg:w="1"/><text x="17.3140%" y="719.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 1.23%)</title><rect x="17.2840%" y="693" width="1.2346%" height="15" fill="rgb(250,166,2)" fg:x="14" fg:w="1"/><text x="17.3140%" y="703.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 1.23%)</title><rect x="17.2840%" y="677" width="1.2346%" height="15" fill="rgb(242,216,29)" fg:x="14" fg:w="1"/><text x="17.3140%" y="687.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 1.23%)</title><rect x="17.2840%" y="661" width="1.2346%" height="15" fill="rgb(230,116,27)" fg:x="14" fg:w="1"/><text x="17.3140%" y="671.50">replace_every-9..</text></g><g><title>`0x7FF817C336BD (1 samples, 1.23%)</title><rect x="17.2840%" y="645" width="1.2346%" height="15" fill="rgb(228,99,48)" fg:x="14" fg:w="1"/><text x="17.3140%" y="655.50">`0x7FF817C336BD</text></g><g><title>`0x7FF817C338E3 (1 samples, 1.23%)</title><rect x="17.2840%" y="629" width="1.2346%" height="15" fill="rgb(253,11,6)" fg:x="14" fg:w="1"/><text x="17.3140%" y="639.50">`0x7FF817C338E3</text></g><g><title>`0x7FF817C327D9 (1 samples, 1.23%)</title><rect x="17.2840%" y="613" width="1.2346%" height="15" fill="rgb(247,143,39)" fg:x="14" fg:w="1"/><text x="17.3140%" y="623.50">`0x7FF817C327D9</text></g><g><title>`0x7FF817CB4522 (1 samples, 1.23%)</title><rect x="17.2840%" y="597" width="1.2346%" height="15" fill="rgb(236,97,10)" fg:x="14" fg:w="1"/><text x="17.3140%" y="607.50">`0x7FF817CB4522</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::tree_painter::TreePainter::finish_empty_leaf (1 samples, 1.23%)</title><rect x="18.5185%" y="613" width="1.2346%" height="15" fill="rgb(233,208,19)" fg:x="15" fg:w="1"/><text x="18.5485%" y="623.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::io::stdio::_print (1 samples, 1.23%)</title><rect x="18.5185%" y="597" width="1.2346%" height="15" fill="rgb(216,164,2)" fg:x="15" fg:w="1"/><text x="18.5485%" y="607.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::io::stdio::print_to (1 samples, 1.23%)</title><rect x="18.5185%" y="581" width="1.2346%" height="15" fill="rgb(220,129,5)" fg:x="15" fg:w="1"/><text x="18.5485%" y="591.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::io::stdio::impl$16::write_fmt (1 samples, 1.23%)</title><rect x="18.5185%" y="565" width="1.2346%" height="15" fill="rgb(242,17,10)" fg:x="15" fg:w="1"/><text x="18.5485%" y="575.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::io::Write::write_fmt (1 samples, 1.23%)</title><rect x="18.5185%" y="549" width="1.2346%" height="15" fill="rgb(242,107,0)" fg:x="15" fg:w="1"/><text x="18.5485%" y="559.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::io::default_write_fmt (1 samples, 1.23%)</title><rect x="18.5185%" y="533" width="1.2346%" height="15" fill="rgb(251,28,31)" fg:x="15" fg:w="1"/><text x="18.5485%" y="543.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::fmt::write (1 samples, 1.23%)</title><rect x="18.5185%" y="517" width="1.2346%" height="15" fill="rgb(233,223,10)" fg:x="15" fg:w="1"/><text x="18.5485%" y="527.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (1 samples, 1.23%)</title><rect x="18.5185%" y="501" width="1.2346%" height="15" fill="rgb(215,21,27)" fg:x="15" fg:w="1"/><text x="18.5485%" y="511.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::io::stdio::impl$19::write_all (1 samples, 1.23%)</title><rect x="18.5185%" y="485" width="1.2346%" height="15" fill="rgb(232,23,21)" fg:x="15" fg:w="1"/><text x="18.5485%" y="495.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::reentrant_lock::impl$11::deref (1 samples, 1.23%)</title><rect x="18.5185%" y="469" width="1.2346%" height="15" fill="rgb(244,5,23)" fg:x="15" fg:w="1"/><text x="18.5485%" y="479.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::io::buffered::linewritershim::impl$1::write_all (1 samples, 1.23%)</title><rect x="18.5185%" y="453" width="1.2346%" height="15" fill="rgb(226,81,46)" fg:x="15" fg:w="1"/><text x="18.5485%" y="463.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::io::stdio::impl$1::write_all (1 samples, 1.23%)</title><rect x="18.5185%" y="437" width="1.2346%" height="15" fill="rgb(247,70,30)" fg:x="15" fg:w="1"/><text x="18.5485%" y="447.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::io::stdio::handle_ebadf (1 samples, 1.23%)</title><rect x="18.5185%" y="421" width="1.2346%" height="15" fill="rgb(212,68,19)" fg:x="15" fg:w="1"/><text x="18.5485%" y="431.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::io::Write::write_all&lt;std::sys::stdio::windows::Stdout&gt; (1 samples, 1.23%)</title><rect x="18.5185%" y="405" width="1.2346%" height="15" fill="rgb(240,187,13)" fg:x="15" fg:w="1"/><text x="18.5485%" y="415.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sys::stdio::windows::write (1 samples, 1.23%)</title><rect x="18.5185%" y="389" width="1.2346%" height="15" fill="rgb(223,113,26)" fg:x="15" fg:w="1"/><text x="18.5485%" y="399.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sys::stdio::windows::write_console_utf16 (1 samples, 1.23%)</title><rect x="18.5185%" y="373" width="1.2346%" height="15" fill="rgb(206,192,2)" fg:x="15" fg:w="1"/><text x="18.5485%" y="383.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sys::stdio::windows::write_valid_utf8_to_console (1 samples, 1.23%)</title><rect x="18.5185%" y="357" width="1.2346%" height="15" fill="rgb(241,108,4)" fg:x="15" fg:w="1"/><text x="18.5485%" y="367.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sys::stdio::windows::write_u16s (1 samples, 1.23%)</title><rect x="18.5185%" y="341" width="1.2346%" height="15" fill="rgb(247,173,49)" fg:x="15" fg:w="1"/><text x="18.5485%" y="351.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sys::pal::windows::cvt (1 samples, 1.23%)</title><rect x="18.5185%" y="325" width="1.2346%" height="15" fill="rgb(224,114,35)" fg:x="15" fg:w="1"/><text x="18.5485%" y="335.50">replace_every-9..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 1.23%)</title><rect x="18.5185%" y="309" width="1.2346%" height="15" fill="rgb(245,159,27)" fg:x="15" fg:w="1"/><text x="18.5485%" y="319.50">replace_every-9..</text></g><g><title>`0x7FF81577A4CA (1 samples, 1.23%)</title><rect x="18.5185%" y="293" width="1.2346%" height="15" fill="rgb(245,172,44)" fg:x="15" fg:w="1"/><text x="18.5485%" y="303.50">`0x7FF81577A4CA</text></g><g><title>`0x7FF81577A5F1 (1 samples, 1.23%)</title><rect x="18.5185%" y="277" width="1.2346%" height="15" fill="rgb(236,23,11)" fg:x="15" fg:w="1"/><text x="18.5485%" y="287.50">`0x7FF81577A5F1</text></g><g><title>`0x7FF817CAD684 (1 samples, 1.23%)</title><rect x="18.5185%" y="261" width="1.2346%" height="15" fill="rgb(205,117,38)" fg:x="15" fg:w="1"/><text x="18.5485%" y="271.50">`0x7FF817CAD684</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::mem::maybe_uninit::MaybeUninit&lt;divan::time::timer::TimedOverhead&gt;::write (23 samples, 28.40%)</title><rect x="20.9877%" y="293" width="28.3951%" height="15" fill="rgb(237,72,25)" fg:x="17" fg:w="23"/><text x="21.0177%" y="303.50">replace_every-914c869a46d85e1c.exe`core::mem::maybe_uninit::MaybeUninit&lt;divan::time::timer::TimedOverhead&gt;::write</text></g><g><title>replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::measure_tally_realloc_overhead(enum2$ (23 samples, 28.40%)</title><rect x="20.9877%" y="277" width="28.3951%" height="15" fill="rgb(244,70,9)" fg:x="17" fg:w="23"/><text x="21.0177%" y="287.50">replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::measure_tally_realloc_overhead(enum2$</text></g><g><title>replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::measure_alloc_info_overhead(enum2$ (23 samples, 28.40%)</title><rect x="20.9877%" y="261" width="28.3951%" height="15" fill="rgb(217,125,39)" fg:x="17" fg:w="23"/><text x="21.0177%" y="271.50">replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::measure_alloc_info_overhead(enum2$</text></g><g><title>replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::measure_min_time(enum2$&lt;divan::time::timer::Timer&gt;, unsigned long long, unsigned long long, divan::time::timer::impl$0::measure_alloc_info_overhead::closure_env$0 (23 samples, 28.40%)</title><rect x="20.9877%" y="245" width="28.3951%" height="15" fill="rgb(235,36,10)" fg:x="17" fg:w="23"/><text x="21.0177%" y="255.50">replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::measure_min_time(enum2$&lt;divan::time::timer::Timer&gt;, unsigned long long, unsigned long long, divan::time::timer::impl$0::measure_alloc_info_overhead::closure_env$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::time::timer::impl$0::measure_alloc_info_overhead::closure$0(divan::time::timer::impl$0::measure_alloc_info_overhead::closure_env$0 (23 samples, 28.40%)</title><rect x="20.9877%" y="229" width="28.3951%" height="15" fill="rgb(251,123,47)" fg:x="17" fg:w="23"/><text x="21.0177%" y="239.50">replace_every-914c869a46d85e1c.exe`divan::time::timer::impl$0::measure_alloc_info_overhead::closure$0(divan::time::timer::impl$0::measure_alloc_info_overhead::closure_env$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::time::timer::impl$0::measure_tally_realloc_overhead::closure$0 (23 samples, 28.40%)</title><rect x="20.9877%" y="213" width="28.3951%" height="15" fill="rgb(221,13,13)" fg:x="17" fg:w="23"/><text x="21.0177%" y="223.50">replace_every-914c869a46d85e1c.exe`divan::time::timer::impl$0::measure_tally_realloc_overhead::closure$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::alloc::ThreadAllocInfo::tally_realloc (23 samples, 28.40%)</title><rect x="20.9877%" y="197" width="28.3951%" height="15" fill="rgb(238,131,9)" fg:x="17" fg:w="23"/><text x="21.0177%" y="207.50">replace_every-914c869a46d85e1c.exe`divan::alloc::ThreadAllocInfo::tally_realloc</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::cmp::Ord::max (23 samples, 28.40%)</title><rect x="20.9877%" y="181" width="28.3951%" height="15" fill="rgb(211,50,8)" fg:x="17" fg:w="23"/><text x="21.0177%" y="191.50">replace_every-914c869a46d85e1c.exe`core::cmp::Ord::max</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::iter::range::impl$6::next(core::ops::range::Range (7 samples, 8.64%)</title><rect x="49.3827%" y="213" width="8.6420%" height="15" fill="rgb(245,182,24)" fg:x="40" fg:w="7"/><text x="49.4127%" y="223.50">replace_every-914c869a46d85e1c.exe`core::iter::range::impl$6::next(core::ops::range::Range</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (7 samples, 8.64%)</title><rect x="49.3827%" y="197" width="8.6420%" height="15" fill="rgb(242,14,37)" fg:x="40" fg:w="7"/><text x="49.4127%" y="207.50">replace_every-914c869a46d85e1c.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::cmp::impls::impl$58::lt (7 samples, 8.64%)</title><rect x="49.3827%" y="181" width="8.6420%" height="15" fill="rgb(246,228,12)" fg:x="40" fg:w="7"/><text x="49.4127%" y="191.50">replace_every-914c869a46d85e1c.exe`core::cmp::impls::impl$58::lt</text></g><g><title>replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::measure_tally_alloc_overhead(enum2$ (20 samples, 24.69%)</title><rect x="49.3827%" y="261" width="24.6914%" height="15" fill="rgb(213,55,15)" fg:x="40" fg:w="20"/><text x="49.4127%" y="271.50">replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::measure_tally_alloc_overhead(enum2$</text></g><g><title>replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::measure_alloc_info_overhead(enum2$ (20 samples, 24.69%)</title><rect x="49.3827%" y="245" width="24.6914%" height="15" fill="rgb(209,9,3)" fg:x="40" fg:w="20"/><text x="49.4127%" y="255.50">replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::measure_alloc_info_overhead(enum2$</text></g><g><title>replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::measure_min_time(enum2$&lt;divan::time::timer::Timer&gt;, unsigned long long, unsigned long long, divan::time::timer::impl$0::measure_alloc_info_overhead::closure_env$0 (20 samples, 24.69%)</title><rect x="49.3827%" y="229" width="24.6914%" height="15" fill="rgb(230,59,30)" fg:x="40" fg:w="20"/><text x="49.4127%" y="239.50">replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::measure_min_time(enum2$&lt;divan::time::timer::Timer&gt;, unsigned long long, unsigned long long, divan::time::timer::impl$0::measure_alloc_info_overhead::closure_env$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::time::timer::impl$0::measure_alloc_info_overhead::closure$0(divan::time::timer::impl$0::measure_alloc_info_overhead::closure_env$0 (13 samples, 16.05%)</title><rect x="58.0247%" y="213" width="16.0494%" height="15" fill="rgb(209,121,21)" fg:x="47" fg:w="13"/><text x="58.0547%" y="223.50">replace_every-914c869a46d85e1c.exe`divan::time::timer::impl$0::measure_alloc_info_overhead::closure$0(divan::time::timer::impl$0::measure_alloc_info_overhead::closure_env$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::time::timer::impl$0::measure_tally_alloc_overhead::closure$0 (13 samples, 16.05%)</title><rect x="58.0247%" y="197" width="16.0494%" height="15" fill="rgb(220,109,13)" fg:x="47" fg:w="13"/><text x="58.0547%" y="207.50">replace_every-914c869a46d85e1c.exe`divan::time::timer::impl$0::measure_tally_alloc_overhead::closure$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::alloc::ThreadAllocInfo::tally_alloc (13 samples, 16.05%)</title><rect x="58.0247%" y="181" width="16.0494%" height="15" fill="rgb(232,18,1)" fg:x="47" fg:w="13"/><text x="58.0547%" y="191.50">replace_every-914c869a46d85e1c.exe`divan::alloc::ThreadAllocInfo::tally_alloc</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::cmp::Ord::max (13 samples, 16.05%)</title><rect x="58.0247%" y="165" width="16.0494%" height="15" fill="rgb(215,41,42)" fg:x="47" fg:w="13"/><text x="58.0547%" y="175.50">replace_every-914c869a46d85e1c.exe`core::cmp::Ord::max</text></g><g><title>`0x7FF817C5CC91 (60 samples, 74.07%)</title><rect x="2.4691%" y="1109" width="74.0741%" height="15" fill="rgb(224,123,36)" fg:x="2" fg:w="60"/><text x="2.4991%" y="1119.50">`0x7FF817C5CC91</text></g><g><title>`0x7FF8165B7374 (60 samples, 74.07%)</title><rect x="2.4691%" y="1093" width="74.0741%" height="15" fill="rgb(240,125,3)" fg:x="2" fg:w="60"/><text x="2.4991%" y="1103.50">`0x7FF8165B7374</text></g><g><title>replace_every-914c869a46d85e1c.exe`__scrt_common_main_seh() (54 samples, 66.67%)</title><rect x="9.8765%" y="1077" width="66.6667%" height="15" fill="rgb(205,98,50)" fg:x="8" fg:w="54"/><text x="9.9065%" y="1087.50">replace_every-914c869a46d85e1c.exe`__scrt_common_main_seh()</text></g><g><title>replace_every-914c869a46d85e1c.exe`invoke_main() (49 samples, 60.49%)</title><rect x="16.0494%" y="1061" width="60.4938%" height="15" fill="rgb(205,185,37)" fg:x="13" fg:w="49"/><text x="16.0794%" y="1071.50">replace_every-914c869a46d85e1c.exe`invoke_main()</text></g><g><title>replace_every-914c869a46d85e1c.exe`main (49 samples, 60.49%)</title><rect x="16.0494%" y="1045" width="60.4938%" height="15" fill="rgb(238,207,15)" fg:x="13" fg:w="49"/><text x="16.0794%" y="1055.50">replace_every-914c869a46d85e1c.exe`main</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::rt::lang_start_internal (49 samples, 60.49%)</title><rect x="16.0494%" y="1029" width="60.4938%" height="15" fill="rgb(213,199,42)" fg:x="13" fg:w="49"/><text x="16.0794%" y="1039.50">replace_every-914c869a46d85e1c.exe`std::rt::lang_start_internal</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::panic::catch_unwind (49 samples, 60.49%)</title><rect x="16.0494%" y="1013" width="60.4938%" height="15" fill="rgb(235,201,11)" fg:x="13" fg:w="49"/><text x="16.0794%" y="1023.50">replace_every-914c869a46d85e1c.exe`std::panic::catch_unwind</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::panicking::catch_unwind (49 samples, 60.49%)</title><rect x="16.0494%" y="997" width="60.4938%" height="15" fill="rgb(207,46,11)" fg:x="13" fg:w="49"/><text x="16.0794%" y="1007.50">replace_every-914c869a46d85e1c.exe`std::panicking::catch_unwind</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::panicking::catch_unwind::do_call (49 samples, 60.49%)</title><rect x="16.0494%" y="981" width="60.4938%" height="15" fill="rgb(241,35,35)" fg:x="13" fg:w="49"/><text x="16.0794%" y="991.50">replace_every-914c869a46d85e1c.exe`std::panicking::catch_unwind::do_call</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::rt::lang_start_internal::closure$0 (49 samples, 60.49%)</title><rect x="16.0494%" y="965" width="60.4938%" height="15" fill="rgb(243,32,47)" fg:x="13" fg:w="49"/><text x="16.0794%" y="975.50">replace_every-914c869a46d85e1c.exe`std::rt::lang_start_internal::closure$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (49 samples, 60.49%)</title><rect x="16.0494%" y="949" width="60.4938%" height="15" fill="rgb(247,202,23)" fg:x="13" fg:w="49"/><text x="16.0794%" y="959.50">replace_every-914c869a46d85e1c.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (49 samples, 60.49%)</title><rect x="16.0494%" y="933" width="60.4938%" height="15" fill="rgb(219,102,11)" fg:x="13" fg:w="49"/><text x="16.0794%" y="943.50">replace_every-914c869a46d85e1c.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::main (49 samples, 60.49%)</title><rect x="16.0494%" y="917" width="60.4938%" height="15" fill="rgb(243,110,44)" fg:x="13" fg:w="49"/><text x="16.0794%" y="927.50">replace_every-914c869a46d85e1c.exe`divan::main</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::divan::Divan::run_action (47 samples, 58.02%)</title><rect x="18.5185%" y="901" width="58.0247%" height="15" fill="rgb(222,74,54)" fg:x="15" fg:w="47"/><text x="18.5485%" y="911.50">replace_every-914c869a46d85e1c.exe`divan::divan::Divan::run_action</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(core::cell::RefCell (47 samples, 58.02%)</title><rect x="18.5185%" y="885" width="58.0247%" height="15" fill="rgb(216,99,12)" fg:x="15" fg:w="47"/><text x="18.5485%" y="895.50">replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(core::cell::RefCell</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(core::cell::UnsafeCell (47 samples, 58.02%)</title><rect x="18.5185%" y="869" width="58.0247%" height="15" fill="rgb(226,22,26)" fg:x="15" fg:w="47"/><text x="18.5485%" y="879.50">replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(core::cell::UnsafeCell</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place (47 samples, 58.02%)</title><rect x="18.5185%" y="853" width="58.0247%" height="15" fill="rgb(217,163,10)" fg:x="15" fg:w="47"/><text x="18.5485%" y="863.50">replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place (47 samples, 58.02%)</title><rect x="18.5185%" y="837" width="58.0247%" height="15" fill="rgb(213,25,53)" fg:x="15" fg:w="47"/><text x="18.5485%" y="847.50">replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::vec::Vec (47 samples, 58.02%)</title><rect x="18.5185%" y="821" width="58.0247%" height="15" fill="rgb(252,105,26)" fg:x="15" fg:w="47"/><text x="18.5485%" y="831.50">replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::vec::Vec</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (47 samples, 58.02%)</title><rect x="18.5185%" y="805" width="58.0247%" height="15" fill="rgb(220,39,43)" fg:x="15" fg:w="47"/><text x="18.5485%" y="815.50">replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec</text></g><g><title>replace_every-914c869a46d85e1c.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (47 samples, 58.02%)</title><rect x="18.5185%" y="789" width="58.0247%" height="15" fill="rgb(229,68,48)" fg:x="15" fg:w="47"/><text x="18.5485%" y="799.50">replace_every-914c869a46d85e1c.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::divan::Divan::run_tree(divan::config::Action, ref$&lt;slice2$&lt;enum2$&lt;divan::entry::tree::EntryTree&gt; &gt; &gt;, divan::divan::SharedContext*, enum2$&lt;core::option::Option&lt;ref$&lt;divan::benchmark::options::BenchOptions&gt; &gt; &gt;, core::cell::RefCell (47 samples, 58.02%)</title><rect x="18.5185%" y="773" width="58.0247%" height="15" fill="rgb(252,8,32)" fg:x="15" fg:w="47"/><text x="18.5485%" y="783.50">replace_every-914c869a46d85e1c.exe`divan::divan::Divan::run_tree(divan::config::Action, ref$&lt;slice2$&lt;enum2$&lt;divan::entry::tree::EntryTree&gt; &gt; &gt;, divan::divan::SharedContext*, enum2$&lt;core::option::Option&lt;ref$&lt;divan::benchmark::options::BenchOptions&gt; &gt; &gt;, core::cell::RefCell</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::cell::RefCell&lt;divan::tree_painter::TreePainter&gt;::borrow_mut (47 samples, 58.02%)</title><rect x="18.5185%" y="757" width="58.0247%" height="15" fill="rgb(223,20,43)" fg:x="15" fg:w="47"/><text x="18.5485%" y="767.50">replace_every-914c869a46d85e1c.exe`core::cell::RefCell&lt;divan::tree_painter::TreePainter&gt;::borrow_mut</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::cell::RefCell&lt;divan::tree_painter::TreePainter&gt;::try_borrow_mut (47 samples, 58.02%)</title><rect x="18.5185%" y="741" width="58.0247%" height="15" fill="rgb(229,81,49)" fg:x="15" fg:w="47"/><text x="18.5485%" y="751.50">replace_every-914c869a46d85e1c.exe`core::cell::RefCell&lt;divan::tree_painter::TreePainter&gt;::try_borrow_mut</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::cell::BorrowRefMut::new(core::cell::Cell (47 samples, 58.02%)</title><rect x="18.5185%" y="725" width="58.0247%" height="15" fill="rgb(236,28,36)" fg:x="15" fg:w="47"/><text x="18.5485%" y="735.50">replace_every-914c869a46d85e1c.exe`core::cell::BorrowRefMut::new(core::cell::Cell</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::divan::Divan::run_tree(divan::config::Action, ref$&lt;slice2$&lt;enum2$&lt;divan::entry::tree::EntryTree&gt; &gt; &gt;, divan::divan::SharedContext*, enum2$&lt;core::option::Option&lt;ref$&lt;divan::benchmark::options::BenchOptions&gt; &gt; &gt;, core::cell::RefCell (47 samples, 58.02%)</title><rect x="18.5185%" y="709" width="58.0247%" height="15" fill="rgb(249,185,26)" fg:x="15" fg:w="47"/><text x="18.5485%" y="719.50">replace_every-914c869a46d85e1c.exe`divan::divan::Divan::run_tree(divan::config::Action, ref$&lt;slice2$&lt;enum2$&lt;divan::entry::tree::EntryTree&gt; &gt; &gt;, divan::divan::SharedContext*, enum2$&lt;core::option::Option&lt;ref$&lt;divan::benchmark::options::BenchOptions&gt; &gt; &gt;, core::cell::RefCell</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::divan::Divan::run_bench_entry(divan::config::Action, enum2$&lt;divan::entry::AnyBenchEntry&gt;, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;ref$&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;, divan::divan::SharedContext*, enum2$&lt;core::option::Option&lt;ref$&lt;divan::benchmark::options::BenchOptions&gt; &gt; &gt;, core::cell::RefCell (47 samples, 58.02%)</title><rect x="18.5185%" y="693" width="58.0247%" height="15" fill="rgb(249,174,33)" fg:x="15" fg:w="47"/><text x="18.5485%" y="703.50">replace_every-914c869a46d85e1c.exe`divan::divan::Divan::run_bench_entry(divan::config::Action, enum2$&lt;divan::entry::AnyBenchEntry&gt;, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;ref$&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;, divan::divan::SharedContext*, enum2$&lt;core::option::Option&lt;ref$&lt;divan::benchmark::options::BenchOptions&gt; &gt; &gt;, core::cell::RefCell</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;core::num::nonzero::NonZero (47 samples, 58.02%)</title><rect x="18.5185%" y="677" width="58.0247%" height="15" fill="rgb(233,201,37)" fg:x="15" fg:w="47"/><text x="18.5485%" y="687.50">replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;core::num::nonzero::NonZero</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;core::num::nonzero::NonZero (47 samples, 58.02%)</title><rect x="18.5185%" y="661" width="58.0247%" height="15" fill="rgb(221,78,26)" fg:x="15" fg:w="47"/><text x="18.5485%" y="671.50">replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;core::num::nonzero::NonZero</text></g><g><title>replace_every-914c869a46d85e1c.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;core::num::nonzero::NonZero (47 samples, 58.02%)</title><rect x="18.5185%" y="645" width="58.0247%" height="15" fill="rgb(250,127,30)" fg:x="15" fg:w="47"/><text x="18.5485%" y="655.50">replace_every-914c869a46d85e1c.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;core::num::nonzero::NonZero</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::divan::impl$1::run_bench_entry::closure$1(divan::divan::impl$1::run_bench_entry::closure_env$1*, ref$&lt;str$&gt;, bool, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;divan::benchmark::Bencher&lt;divan::benchmark::BencherConfig&lt;divan::util::Unit&gt; &gt; &gt;,assoc$&lt;Output,tuple$ (47 samples, 58.02%)</title><rect x="18.5185%" y="629" width="58.0247%" height="15" fill="rgb(230,49,44)" fg:x="15" fg:w="47"/><text x="18.5485%" y="639.50">replace_every-914c869a46d85e1c.exe`divan::divan::impl$1::run_bench_entry::closure$1(divan::divan::impl$1::run_bench_entry::closure_env$1*, ref$&lt;str$&gt;, bool, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;divan::benchmark::Bencher&lt;divan::benchmark::BencherConfig&lt;divan::util::Unit&gt; &gt; &gt;,assoc$&lt;Output,tuple$</text></g><g><title>replace_every-914c869a46d85e1c.exe`replace_every::alphabet_std_push(divan::benchmark::Bencher&lt;divan::benchmark::BencherConfig (46 samples, 56.79%)</title><rect x="19.7531%" y="613" width="56.7901%" height="15" fill="rgb(229,67,23)" fg:x="16" fg:w="46"/><text x="19.7831%" y="623.50">replace_every-914c869a46d85e1c.exe`replace_every::alphabet_std_push(divan::benchmark::Bencher&lt;divan::benchmark::BencherConfig</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place (46 samples, 56.79%)</title><rect x="19.7531%" y="597" width="56.7901%" height="15" fill="rgb(249,83,47)" fg:x="16" fg:w="46"/><text x="19.7831%" y="607.50">replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::vec::Vec (46 samples, 56.79%)</title><rect x="19.7531%" y="581" width="56.7901%" height="15" fill="rgb(215,43,3)" fg:x="16" fg:w="46"/><text x="19.7831%" y="591.50">replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::vec::Vec</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (46 samples, 56.79%)</title><rect x="19.7531%" y="565" width="56.7901%" height="15" fill="rgb(238,154,13)" fg:x="16" fg:w="46"/><text x="19.7831%" y="575.50">replace_every-914c869a46d85e1c.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec</text></g><g><title>replace_every-914c869a46d85e1c.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (46 samples, 56.79%)</title><rect x="19.7531%" y="549" width="56.7901%" height="15" fill="rgb(219,56,2)" fg:x="16" fg:w="46"/><text x="19.7831%" y="559.50">replace_every-914c869a46d85e1c.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::benchmark::Bencher&lt;divan::benchmark::BencherConfig&lt;divan::util::Unit&gt; &gt;::bench_local&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;(divan::benchmark::Bencher&lt;divan::benchmark::BencherConfig (46 samples, 56.79%)</title><rect x="19.7531%" y="533" width="56.7901%" height="15" fill="rgb(233,0,4)" fg:x="16" fg:w="46"/><text x="19.7831%" y="543.50">replace_every-914c869a46d85e1c.exe`divan::benchmark::Bencher&lt;divan::benchmark::BencherConfig&lt;divan::util::Unit&gt; &gt;::bench_local&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;(divan::benchmark::Bencher&lt;divan::benchmark::BencherConfig</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::benchmark::Bencher&lt;divan::benchmark::BencherConfig&lt;divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt; &gt; &gt;::bench_local_values(divan::benchmark::Bencher&lt;divan::benchmark::BencherConfig&lt;divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt; &gt; &gt;, divan::benchmark::impl$2::bench_local::closure_env$1&lt;tuple$ (45 samples, 55.56%)</title><rect x="20.9877%" y="517" width="55.5556%" height="15" fill="rgb(235,30,7)" fg:x="17" fg:w="45"/><text x="21.0177%" y="527.50">replace_every-914c869a46d85e1c.exe`divan::benchmark::Bencher&lt;divan::benchmark::BencherConfig&lt;divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt; &gt; &gt;::bench_local_values(divan::benchmark::Bencher&lt;divan::benchmark::BencherConfig&lt;divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt; &gt; &gt;, divan::benchmark::impl$2::bench_local::closure_env$1&lt;tuple$</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::benchmark::BenchContext::bench_loop_local(divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;, divan::benchmark::impl$4::bench_local_values::closure_env$0&lt;tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$1&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt; &gt;, divan::benchmark::impl$4::bench_local_values::closure_env$1&lt;tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$1&lt;tuple$ (45 samples, 55.56%)</title><rect x="20.9877%" y="501" width="55.5556%" height="15" fill="rgb(250,79,13)" fg:x="17" fg:w="45"/><text x="21.0177%" y="511.50">replace_every-914c869a46d85e1c.exe`divan::benchmark::BenchContext::bench_loop_local(divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;, divan::benchmark::impl$4::bench_local_values::closure_env$0&lt;tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$1&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt; &gt;, divan::benchmark::impl$4::bench_local_values::closure_env$1&lt;tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$1&lt;tuple$</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::benchmark::BenchContext::bench_loop_threaded(divan::benchmark::impl$6::bench_loop_local::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,divan::benchmark::impl$4::bench_local_values::closure_env$0&lt;tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$1&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt; &gt;,divan::benchmark::impl$4::bench_local_values::closure_env$1&lt;tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$1&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt; &gt; &gt;, divan::benchmark::impl$6::bench_loop_local::closure_env$1&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,divan::benchmark::impl$4::bench_local_values::closure_env$0&lt;tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$1&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt; &gt;,divan::benchmark::impl$4::bench_local_values::closure_env$1&lt;tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$1&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt; &gt; &gt;, divan::benchmark::impl$6::bench_loop_local::closure_env$2&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,divan::benchmark::impl$4::bench_local_values::closure_env$0&lt;tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$1&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt; &gt;,divan::benchmark::impl$4::bench_local_values::closure_env$1&lt;tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$1&lt;tuple$ (45 samples, 55.56%)</title><rect x="20.9877%" y="485" width="55.5556%" height="15" fill="rgb(211,146,34)" fg:x="17" fg:w="45"/><text x="21.0177%" y="495.50">replace_every-914c869a46d85e1c.exe`divan::benchmark::BenchContext::bench_loop_threaded(divan::benchmark::impl$6::bench_loop_local::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,divan::benchmark::impl$4::bench_local_values::closure_env$0&lt;tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$1&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt; &gt;,divan::benchmark::impl$4::bench_local_values::closure_env$1&lt;tuple$&lt;&gt;,divan::benchmark::impl$2::bench_local::closure_env$0&lt;tuple$&lt;&gt;,replace_every::alphabet_std_push::closure_env$0&gt;,tuple$&lt;&gt;,divan::benchmark:..</text></g><g><title>replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::bench_overheads(enum2$ (45 samples, 55.56%)</title><rect x="20.9877%" y="469" width="55.5556%" height="15" fill="rgb(228,22,38)" fg:x="17" fg:w="45"/><text x="21.0177%" y="479.50">replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::bench_overheads(enum2$</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::once_lock::OnceLock&lt;divan::time::timer::TimedOverhead&gt;::get_or_init (45 samples, 55.56%)</title><rect x="20.9877%" y="453" width="55.5556%" height="15" fill="rgb(235,168,5)" fg:x="17" fg:w="45"/><text x="21.0177%" y="463.50">replace_every-914c869a46d85e1c.exe`std::sync::once_lock::OnceLock&lt;divan::time::timer::TimedOverhead&gt;::get_or_init</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::once_lock::OnceLock&lt;divan::time::timer::TimedOverhead&gt;::get_or_try_init(std::sync::once_lock::impl$0::get_or_init::closure_env$0 (45 samples, 55.56%)</title><rect x="20.9877%" y="437" width="55.5556%" height="15" fill="rgb(221,155,16)" fg:x="17" fg:w="45"/><text x="21.0177%" y="447.50">replace_every-914c869a46d85e1c.exe`std::sync::once_lock::OnceLock&lt;divan::time::timer::TimedOverhead&gt;::get_or_try_init(std::sync::once_lock::impl$0::get_or_init::closure_env$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::once_lock::OnceLock&lt;divan::time::timer::TimedOverhead&gt;::initialize&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;divan::time::timer::TimedOverhead,divan::time::timer::impl$0::bench_overheads::closure_env$0&gt;,never$&gt;(std::sync::once_lock::impl$0::get_or_init::closure_env$0 (45 samples, 55.56%)</title><rect x="20.9877%" y="421" width="55.5556%" height="15" fill="rgb(215,215,53)" fg:x="17" fg:w="45"/><text x="21.0177%" y="431.50">replace_every-914c869a46d85e1c.exe`std::sync::once_lock::OnceLock&lt;divan::time::timer::TimedOverhead&gt;::initialize&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;divan::time::timer::TimedOverhead,divan::time::timer::impl$0::bench_overheads::closure_env$0&gt;,never$&gt;(std::sync::once_lock::impl$0::get_or_init::closure_env$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::poison::once::Once::call_once_force(std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0 (45 samples, 55.56%)</title><rect x="20.9877%" y="405" width="55.5556%" height="15" fill="rgb(223,4,10)" fg:x="17" fg:w="45"/><text x="21.0177%" y="415.50">replace_every-914c869a46d85e1c.exe`std::sync::poison::once::Once::call_once_force(std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sys::sync::once::futex::Once::call (45 samples, 55.56%)</title><rect x="20.9877%" y="389" width="55.5556%" height="15" fill="rgb(234,103,6)" fg:x="17" fg:w="45"/><text x="21.0177%" y="399.50">replace_every-914c869a46d85e1c.exe`std::sys::sync::once::futex::Once::call</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::cell::Cell::get (45 samples, 55.56%)</title><rect x="20.9877%" y="373" width="55.5556%" height="15" fill="rgb(227,97,0)" fg:x="17" fg:w="45"/><text x="21.0177%" y="383.50">replace_every-914c869a46d85e1c.exe`core::cell::Cell::get</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ops::function::FnOnce::call_once&lt;std::sync::poison::once::impl$2::call_once_force::closure_env$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;divan::time::timer::TimedOverhead,divan::time::timer::impl$0::bench_overheads::closure_env$0&gt;,never$&gt; &gt;,tuple$&lt;ref$&lt;std::sync::poison::once::OnceState&gt; &gt; &gt;(std::sync::poison::once::impl$2::call_once_force::closure_env$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0 (45 samples, 55.56%)</title><rect x="20.9877%" y="357" width="55.5556%" height="15" fill="rgb(234,150,53)" fg:x="17" fg:w="45"/><text x="21.0177%" y="367.50">replace_every-914c869a46d85e1c.exe`core::ops::function::FnOnce::call_once&lt;std::sync::poison::once::impl$2::call_once_force::closure_env$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;divan::time::timer::TimedOverhead,divan::time::timer::impl$0::bench_overheads::closure_env$0&gt;,never$&gt; &gt;,tuple$&lt;ref$&lt;std::sync::poison::once::OnceState&gt; &gt; &gt;(std::sync::poison::once::impl$2::call_once_force::closure_env$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::ops::function::FnOnce::call_once(std::sync::poison::once::impl$2::call_once_force::closure_env$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0 (45 samples, 55.56%)</title><rect x="20.9877%" y="341" width="55.5556%" height="15" fill="rgb(228,201,54)" fg:x="17" fg:w="45"/><text x="21.0177%" y="351.50">replace_every-914c869a46d85e1c.exe`core::ops::function::FnOnce::call_once(std::sync::poison::once::impl$2::call_once_force::closure_env$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::poison::once::impl$2::call_once_force::closure$0(std::sync::poison::once::impl$2::call_once_force::closure_env$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0 (45 samples, 55.56%)</title><rect x="20.9877%" y="325" width="55.5556%" height="15" fill="rgb(222,22,37)" fg:x="17" fg:w="45"/><text x="21.0177%" y="335.50">replace_every-914c869a46d85e1c.exe`std::sync::poison::once::impl$2::call_once_force::closure$0(std::sync::poison::once::impl$2::call_once_force::closure_env$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::once_lock::impl$0::initialize::closure$0(std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0 (45 samples, 55.56%)</title><rect x="20.9877%" y="309" width="55.5556%" height="15" fill="rgb(237,53,32)" fg:x="17" fg:w="45"/><text x="21.0177%" y="319.50">replace_every-914c869a46d85e1c.exe`std::sync::once_lock::impl$0::initialize::closure$0(std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::timer::TimedOverhead,std::sync::once_lock::impl$0::get_or_init::closure_env$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::once_lock::impl$0::get_or_init::closure$0(std::sync::once_lock::impl$0::get_or_init::closure_env$0 (22 samples, 27.16%)</title><rect x="49.3827%" y="293" width="27.1605%" height="15" fill="rgb(233,25,53)" fg:x="40" fg:w="22"/><text x="49.4127%" y="303.50">replace_every-914c869a46d85e1c.exe`std::sync::once_lock::impl$0::get_or_init::closure$0(std::sync::once_lock::impl$0::get_or_init::closure_env$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`divan::time::timer::impl$0::bench_overheads::closure$0 (22 samples, 27.16%)</title><rect x="49.3827%" y="277" width="27.1605%" height="15" fill="rgb(210,40,34)" fg:x="40" fg:w="22"/><text x="49.4127%" y="287.50">replace_every-914c869a46d85e1c.exe`divan::time::timer::impl$0::bench_overheads::closure$0</text></g><g><title>replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::sample_loop_overhead(enum2$ (2 samples, 2.47%)</title><rect x="74.0741%" y="261" width="2.4691%" height="15" fill="rgb(241,220,44)" fg:x="60" fg:w="2"/><text x="74.1041%" y="271.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::once_lock::OnceLock&lt;divan::time::fine_duration::FineDuration&gt;::get_or_init (2 samples, 2.47%)</title><rect x="74.0741%" y="245" width="2.4691%" height="15" fill="rgb(235,28,35)" fg:x="60" fg:w="2"/><text x="74.1041%" y="255.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::once_lock::OnceLock&lt;divan::time::fine_duration::FineDuration&gt;::get_or_try_init(std::sync::once_lock::impl$0::get_or_init::closure_env$0 (2 samples, 2.47%)</title><rect x="74.0741%" y="229" width="2.4691%" height="15" fill="rgb(210,56,17)" fg:x="60" fg:w="2"/><text x="74.1041%" y="239.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::once_lock::OnceLock&lt;divan::time::fine_duration::FineDuration&gt;::initialize&lt;divan::time::fine_duration::FineDuration,std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;divan::time::fine_duration::FineDuration,divan::time::timer::impl$0::sample_loop_overhead::closure_env$0&gt;,never$&gt;(std::sync::once_lock::impl$0::get_or_init::closure_env$0 (2 samples, 2.47%)</title><rect x="74.0741%" y="213" width="2.4691%" height="15" fill="rgb(224,130,29)" fg:x="60" fg:w="2"/><text x="74.1041%" y="223.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::poison::once::Once::call_once_force(std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::fine_duration::FineDuration,std::sync::once_lock::impl$0::get_or_init::closure_env$0 (2 samples, 2.47%)</title><rect x="74.0741%" y="197" width="2.4691%" height="15" fill="rgb(235,212,8)" fg:x="60" fg:w="2"/><text x="74.1041%" y="207.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sys::sync::once::futex::Once::call (2 samples, 2.47%)</title><rect x="74.0741%" y="181" width="2.4691%" height="15" fill="rgb(223,33,50)" fg:x="60" fg:w="2"/><text x="74.1041%" y="191.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::cell::Cell::get (2 samples, 2.47%)</title><rect x="74.0741%" y="165" width="2.4691%" height="15" fill="rgb(219,149,13)" fg:x="60" fg:w="2"/><text x="74.1041%" y="175.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::poison::once::impl$2::call_once_force::closure$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::fine_duration::FineDuration,std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;divan::time::fine_duration::FineDuration,divan::time::timer::impl$0::sample_loop_overhead::closure_env$0&gt;,never$&gt; &gt;(std::sync::poison::once::impl$2::call_once_force::closure_env$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::fine_duration::FineDuration,std::sync::once_lock::impl$0::get_or_init::closure_env$0 (2 samples, 2.47%)</title><rect x="74.0741%" y="149" width="2.4691%" height="15" fill="rgb(250,156,29)" fg:x="60" fg:w="2"/><text x="74.1041%" y="159.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`std::sync::once_lock::impl$0::initialize::closure$0(std::sync::once_lock::impl$0::initialize::closure_env$0&lt;divan::time::fine_duration::FineDuration,std::sync::once_lock::impl$0::get_or_init::closure_env$0 (2 samples, 2.47%)</title><rect x="74.0741%" y="133" width="2.4691%" height="15" fill="rgb(216,193,19)" fg:x="60" fg:w="2"/><text x="74.1041%" y="143.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::mem::maybe_uninit::MaybeUninit&lt;divan::time::fine_duration::FineDuration&gt;::write (2 samples, 2.47%)</title><rect x="74.0741%" y="117" width="2.4691%" height="15" fill="rgb(216,135,14)" fg:x="60" fg:w="2"/><text x="74.1041%" y="127.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`enum2$&lt;divan::time::timer::Timer&gt;::measure_sample_loop_overhead(enum2$ (2 samples, 2.47%)</title><rect x="74.0741%" y="101" width="2.4691%" height="15" fill="rgb(241,47,5)" fg:x="60" fg:w="2"/><text x="74.1041%" y="111.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::iter::range::impl$6::next(core::ops::range::Range (2 samples, 2.47%)</title><rect x="74.0741%" y="85" width="2.4691%" height="15" fill="rgb(233,42,35)" fg:x="60" fg:w="2"/><text x="74.1041%" y="95.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (2 samples, 2.47%)</title><rect x="74.0741%" y="69" width="2.4691%" height="15" fill="rgb(231,13,6)" fg:x="60" fg:w="2"/><text x="74.1041%" y="79.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::iter::range::impl$43::forward_unchecked (2 samples, 2.47%)</title><rect x="74.0741%" y="53" width="2.4691%" height="15" fill="rgb(207,181,40)" fg:x="60" fg:w="2"/><text x="74.1041%" y="63.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>replace_every-914c869a46d85e1c.exe`core::num::impl$11::unchecked_add (2 samples, 2.47%)</title><rect x="74.0741%" y="37" width="2.4691%" height="15" fill="rgb(254,173,49)" fg:x="60" fg:w="2"/><text x="74.1041%" y="47.50">replace_every-914c869a46d85e1c.e..</text></g><g><title>`0x7FF817CE2196 (1 samples, 1.23%)</title><rect x="76.5432%" y="1061" width="1.2346%" height="15" fill="rgb(221,1,38)" fg:x="62" fg:w="1"/><text x="76.5732%" y="1071.50">`0x7FF817CE2196</text></g><g><title>`0x7FF817C22296 (1 samples, 1.23%)</title><rect x="76.5432%" y="1045" width="1.2346%" height="15" fill="rgb(206,124,46)" fg:x="62" fg:w="1"/><text x="76.5732%" y="1055.50">`0x7FF817C22296</text></g><g><title>`0x7FF817C2354A (1 samples, 1.23%)</title><rect x="76.5432%" y="1029" width="1.2346%" height="15" fill="rgb(249,21,11)" fg:x="62" fg:w="1"/><text x="76.5732%" y="1039.50">`0x7FF817C2354A</text></g><g><title>`0x7FF817CADFA4 (1 samples, 1.23%)</title><rect x="76.5432%" y="1013" width="1.2346%" height="15" fill="rgb(222,201,40)" fg:x="62" fg:w="1"/><text x="76.5732%" y="1023.50">`0x7FF817CADFA4</text></g><g><title>`0x7FF817C1AC87 (1 samples, 1.23%)</title><rect x="77.7778%" y="1029" width="1.2346%" height="15" fill="rgb(235,61,29)" fg:x="63" fg:w="1"/><text x="77.8078%" y="1039.50">`0x7FF817C1AC87</text></g><g><title>`0x7FF817C19B1A (1 samples, 1.23%)</title><rect x="77.7778%" y="1013" width="1.2346%" height="15" fill="rgb(219,207,3)" fg:x="63" fg:w="1"/><text x="77.8078%" y="1023.50">`0x7FF817C19B1A</text></g><g><title>`0x7FF817CAD964 (1 samples, 1.23%)</title><rect x="77.7778%" y="997" width="1.2346%" height="15" fill="rgb(222,56,46)" fg:x="63" fg:w="1"/><text x="77.8078%" y="1007.50">`0x7FF817CAD964</text></g><g><title>`0x7FF817CE27E3 (2 samples, 2.47%)</title><rect x="77.7778%" y="1061" width="2.4691%" height="15" fill="rgb(239,76,54)" fg:x="63" fg:w="2"/><text x="77.8078%" y="1071.50">`0x7FF817CE27E3</text></g><g><title>`0x7FF817CE413F (2 samples, 2.47%)</title><rect x="77.7778%" y="1045" width="2.4691%" height="15" fill="rgb(231,124,27)" fg:x="63" fg:w="2"/><text x="77.8078%" y="1055.50">`0x7FF817CE413F</text></g><g><title>`0x7FF817C1AD5B (1 samples, 1.23%)</title><rect x="79.0123%" y="1029" width="1.2346%" height="15" fill="rgb(249,195,6)" fg:x="64" fg:w="1"/><text x="79.0423%" y="1039.50">`0x7FF817C1AD5B</text></g><g><title>`0x7FF817CE298C (1 samples, 1.23%)</title><rect x="80.2469%" y="1061" width="1.2346%" height="15" fill="rgb(237,174,47)" fg:x="65" fg:w="1"/><text x="80.2769%" y="1071.50">`0x7FF817CE298C</text></g><g><title>`0x7FF817C5B045 (1 samples, 1.23%)</title><rect x="80.2469%" y="1045" width="1.2346%" height="15" fill="rgb(206,201,31)" fg:x="65" fg:w="1"/><text x="80.2769%" y="1055.50">`0x7FF817C5B045</text></g><g><title>`0x7FF817C5B0F7 (1 samples, 1.23%)</title><rect x="80.2469%" y="1029" width="1.2346%" height="15" fill="rgb(231,57,52)" fg:x="65" fg:w="1"/><text x="80.2769%" y="1039.50">`0x7FF817C5B0F7</text></g><g><title>`0x7FF817C5B201 (1 samples, 1.23%)</title><rect x="80.2469%" y="1013" width="1.2346%" height="15" fill="rgb(248,177,22)" fg:x="65" fg:w="1"/><text x="80.2769%" y="1023.50">`0x7FF817C5B201</text></g><g><title>`0x7FF817C5B59A (1 samples, 1.23%)</title><rect x="80.2469%" y="997" width="1.2346%" height="15" fill="rgb(215,211,37)" fg:x="65" fg:w="1"/><text x="80.2769%" y="1007.50">`0x7FF817C5B59A</text></g><g><title>`0x7FF817C243EA (1 samples, 1.23%)</title><rect x="81.4815%" y="981" width="1.2346%" height="15" fill="rgb(241,128,51)" fg:x="66" fg:w="1"/><text x="81.5115%" y="991.50">`0x7FF817C243EA</text></g><g><title>`0x7FF817C25157 (1 samples, 1.23%)</title><rect x="81.4815%" y="965" width="1.2346%" height="15" fill="rgb(227,165,31)" fg:x="66" fg:w="1"/><text x="81.5115%" y="975.50">`0x7FF817C25157</text></g><g><title>`0x7FF817CADC84 (1 samples, 1.23%)</title><rect x="81.4815%" y="949" width="1.2346%" height="15" fill="rgb(228,167,24)" fg:x="66" fg:w="1"/><text x="81.5115%" y="959.50">`0x7FF817CADC84</text></g><g><title>`0x7FF817C27B29 (1 samples, 1.23%)</title><rect x="82.7160%" y="949" width="1.2346%" height="15" fill="rgb(228,143,12)" fg:x="67" fg:w="1"/><text x="82.7460%" y="959.50">`0x7FF817C27B29</text></g><g><title>`0x7FF817C288A8 (1 samples, 1.23%)</title><rect x="82.7160%" y="933" width="1.2346%" height="15" fill="rgb(249,149,8)" fg:x="67" fg:w="1"/><text x="82.7460%" y="943.50">`0x7FF817C288A8</text></g><g><title>`0x7FF817C24479 (1 samples, 1.23%)</title><rect x="82.7160%" y="917" width="1.2346%" height="15" fill="rgb(243,35,44)" fg:x="67" fg:w="1"/><text x="82.7460%" y="927.50">`0x7FF817C24479</text></g><g><title>`0x7FF817C24AAA (1 samples, 1.23%)</title><rect x="82.7160%" y="901" width="1.2346%" height="15" fill="rgb(246,89,9)" fg:x="67" fg:w="1"/><text x="82.7460%" y="911.50">`0x7FF817C24AAA</text></g><g><title>`0x7FF817C24D42 (1 samples, 1.23%)</title><rect x="82.7160%" y="885" width="1.2346%" height="15" fill="rgb(233,213,13)" fg:x="67" fg:w="1"/><text x="82.7460%" y="895.50">`0x7FF817C24D42</text></g><g><title>`0x7FF817CADAA4 (1 samples, 1.23%)</title><rect x="82.7160%" y="869" width="1.2346%" height="15" fill="rgb(233,141,41)" fg:x="67" fg:w="1"/><text x="82.7460%" y="879.50">`0x7FF817CADAA4</text></g><g><title>`0x7FF817C4263A (1 samples, 1.23%)</title><rect x="83.9506%" y="933" width="1.2346%" height="15" fill="rgb(239,167,4)" fg:x="68" fg:w="1"/><text x="83.9806%" y="943.50">`0x7FF817C4263A</text></g><g><title>`0x7FF817C426C6 (1 samples, 1.23%)</title><rect x="85.1852%" y="933" width="1.2346%" height="15" fill="rgb(209,217,16)" fg:x="69" fg:w="1"/><text x="85.2152%" y="943.50">`0x7FF817C426C6</text></g><g><title>`0x7FF817C2FB31 (5 samples, 6.17%)</title><rect x="81.4815%" y="1013" width="6.1728%" height="15" fill="rgb(219,88,35)" fg:x="66" fg:w="5"/><text x="81.5115%" y="1023.50">`0x7FF817C2FB31</text></g><g><title>`0x7FF817C7C2ED (5 samples, 6.17%)</title><rect x="81.4815%" y="997" width="6.1728%" height="15" fill="rgb(220,193,23)" fg:x="66" fg:w="5"/><text x="81.5115%" y="1007.50">`0x7FF817C7C2ED</text></g><g><title>`0x7FF817C24479 (4 samples, 4.94%)</title><rect x="82.7160%" y="981" width="4.9383%" height="15" fill="rgb(230,90,52)" fg:x="67" fg:w="4"/><text x="82.7460%" y="991.50">`0x7FF817C24479</text></g><g><title>`0x7FF817C24C14 (4 samples, 4.94%)</title><rect x="82.7160%" y="965" width="4.9383%" height="15" fill="rgb(252,106,19)" fg:x="67" fg:w="4"/><text x="82.7460%" y="975.50">`0x7FF817C24C14</text></g><g><title>`0x7FF817C27BC4 (3 samples, 3.70%)</title><rect x="83.9506%" y="949" width="3.7037%" height="15" fill="rgb(206,74,20)" fg:x="68" fg:w="3"/><text x="83.9806%" y="959.50">`0x7FF817C27BC4</text></g><g><title>`0x7FF817C42714 (1 samples, 1.23%)</title><rect x="86.4198%" y="933" width="1.2346%" height="15" fill="rgb(230,138,44)" fg:x="70" fg:w="1"/><text x="86.4498%" y="943.50">`0x7FF817C42714</text></g><g><title>`0x7FF81577954D (1 samples, 1.23%)</title><rect x="87.6543%" y="917" width="1.2346%" height="15" fill="rgb(235,182,43)" fg:x="71" fg:w="1"/><text x="87.6843%" y="927.50">`0x7FF81577954D</text></g><g><title>`0x7FF8157798C7 (1 samples, 1.23%)</title><rect x="87.6543%" y="901" width="1.2346%" height="15" fill="rgb(242,16,51)" fg:x="71" fg:w="1"/><text x="87.6843%" y="911.50">`0x7FF8157798C7</text></g><g><title>`0x7FF81577B116 (1 samples, 1.23%)</title><rect x="87.6543%" y="885" width="1.2346%" height="15" fill="rgb(248,9,4)" fg:x="71" fg:w="1"/><text x="87.6843%" y="895.50">`0x7FF81577B116</text></g><g><title>`0x7FF817C18EF2 (1 samples, 1.23%)</title><rect x="87.6543%" y="869" width="1.2346%" height="15" fill="rgb(210,31,22)" fg:x="71" fg:w="1"/><text x="87.6843%" y="879.50">`0x7FF817C18EF2</text></g><g><title>`0x7FF817C19235 (1 samples, 1.23%)</title><rect x="87.6543%" y="853" width="1.2346%" height="15" fill="rgb(239,54,39)" fg:x="71" fg:w="1"/><text x="87.6843%" y="863.50">`0x7FF817C19235</text></g><g><title>`0x7FF817CAE994 (1 samples, 1.23%)</title><rect x="87.6543%" y="837" width="1.2346%" height="15" fill="rgb(230,99,41)" fg:x="71" fg:w="1"/><text x="87.6843%" y="847.50">`0x7FF817CAE994</text></g><g><title>`0x7FF815779577 (1 samples, 1.23%)</title><rect x="88.8889%" y="917" width="1.2346%" height="15" fill="rgb(253,106,12)" fg:x="72" fg:w="1"/><text x="88.9189%" y="927.50">`0x7FF815779577</text></g><g><title>`0x7FF8157C5D72 (1 samples, 1.23%)</title><rect x="88.8889%" y="901" width="1.2346%" height="15" fill="rgb(213,46,41)" fg:x="72" fg:w="1"/><text x="88.9189%" y="911.50">`0x7FF8157C5D72</text></g><g><title>`0x7FF8157C50BE (1 samples, 1.23%)</title><rect x="88.8889%" y="885" width="1.2346%" height="15" fill="rgb(215,133,35)" fg:x="72" fg:w="1"/><text x="88.9189%" y="895.50">`0x7FF8157C50BE</text></g><g><title>`0x7FF8157C352D (1 samples, 1.23%)</title><rect x="88.8889%" y="869" width="1.2346%" height="15" fill="rgb(213,28,5)" fg:x="72" fg:w="1"/><text x="88.9189%" y="879.50">`0x7FF8157C352D</text></g><g><title>`0x7FF8157C31B8 (1 samples, 1.23%)</title><rect x="88.8889%" y="853" width="1.2346%" height="15" fill="rgb(215,77,49)" fg:x="72" fg:w="1"/><text x="88.9189%" y="863.50">`0x7FF8157C31B8</text></g><g><title>`0x7FF8157C3E69 (1 samples, 1.23%)</title><rect x="88.8889%" y="837" width="1.2346%" height="15" fill="rgb(248,100,22)" fg:x="72" fg:w="1"/><text x="88.9189%" y="847.50">`0x7FF8157C3E69</text></g><g><title>`0x7FF81576C910 (1 samples, 1.23%)</title><rect x="88.8889%" y="821" width="1.2346%" height="15" fill="rgb(208,67,9)" fg:x="72" fg:w="1"/><text x="88.9189%" y="831.50">`0x7FF81576C910</text></g><g><title>`0x7FF817CE388E (8 samples, 9.88%)</title><rect x="81.4815%" y="1061" width="9.8765%" height="15" fill="rgb(219,133,21)" fg:x="66" fg:w="8"/><text x="81.5115%" y="1071.50">`0x7FF817CE388E</text></g><g><title>`0x7FF817C26AF4 (8 samples, 9.88%)</title><rect x="81.4815%" y="1045" width="9.8765%" height="15" fill="rgb(246,46,29)" fg:x="66" fg:w="8"/><text x="81.5115%" y="1055.50">`0x7FF817C26AF4</text></g><g><title>`0x7FF817C273E4 (8 samples, 9.88%)</title><rect x="81.4815%" y="1029" width="9.8765%" height="15" fill="rgb(246,185,52)" fg:x="66" fg:w="8"/><text x="81.5115%" y="1039.50">`0x7FF817C273E4</text></g><g><title>`0x7FF817C2FBAE (3 samples, 3.70%)</title><rect x="87.6543%" y="1013" width="3.7037%" height="15" fill="rgb(252,136,11)" fg:x="71" fg:w="3"/><text x="87.6843%" y="1023.50">`0x7FF817C2FBAE</text></g><g><title>`0x7FF817C4D947 (3 samples, 3.70%)</title><rect x="87.6543%" y="997" width="3.7037%" height="15" fill="rgb(219,138,53)" fg:x="71" fg:w="3"/><text x="87.6843%" y="1007.50">`0x7FF817C4D947</text></g><g><title>`0x7FF817C7D110 (3 samples, 3.70%)</title><rect x="87.6543%" y="981" width="3.7037%" height="15" fill="rgb(211,51,23)" fg:x="71" fg:w="3"/><text x="87.6843%" y="991.50">`0x7FF817C7D110</text></g><g><title>`0x7FF817C7D08A (3 samples, 3.70%)</title><rect x="87.6543%" y="965" width="3.7037%" height="15" fill="rgb(247,221,28)" fg:x="71" fg:w="3"/><text x="87.6843%" y="975.50">`0x7FF817C7D08A</text></g><g><title>`0x7FF817C7D2F7 (3 samples, 3.70%)</title><rect x="87.6543%" y="949" width="3.7037%" height="15" fill="rgb(251,222,45)" fg:x="71" fg:w="3"/><text x="87.6843%" y="959.50">`0x7FF817C7D2F7</text></g><g><title>`0x7FF817C29A1D (3 samples, 3.70%)</title><rect x="87.6543%" y="933" width="3.7037%" height="15" fill="rgb(217,162,53)" fg:x="71" fg:w="3"/><text x="87.6843%" y="943.50">`0x7FF817C29A1D</text></g><g><title>`0x7FF81577957E (1 samples, 1.23%)</title><rect x="90.1235%" y="917" width="1.2346%" height="15" fill="rgb(229,93,14)" fg:x="73" fg:w="1"/><text x="90.1535%" y="927.50">`0x7FF81577957E</text></g><g><title>`0x7FF8157C6567 (1 samples, 1.23%)</title><rect x="90.1235%" y="901" width="1.2346%" height="15" fill="rgb(209,67,49)" fg:x="73" fg:w="1"/><text x="90.1535%" y="911.50">`0x7FF8157C6567</text></g><g><title>`0x7FF8157E2DCE (1 samples, 1.23%)</title><rect x="90.1235%" y="885" width="1.2346%" height="15" fill="rgb(213,87,29)" fg:x="73" fg:w="1"/><text x="90.1535%" y="895.50">`0x7FF8157E2DCE</text></g><g><title>`0x7FF8157C8C05 (1 samples, 1.23%)</title><rect x="90.1235%" y="869" width="1.2346%" height="15" fill="rgb(205,151,52)" fg:x="73" fg:w="1"/><text x="90.1535%" y="879.50">`0x7FF8157C8C05</text></g><g><title>`0x7FF8157D5363 (1 samples, 1.23%)</title><rect x="90.1235%" y="853" width="1.2346%" height="15" fill="rgb(253,215,39)" fg:x="73" fg:w="1"/><text x="90.1535%" y="863.50">`0x7FF8157D5363</text></g><g><title>`0x7FF8157E01EB (1 samples, 1.23%)</title><rect x="90.1235%" y="837" width="1.2346%" height="15" fill="rgb(221,220,41)" fg:x="73" fg:w="1"/><text x="90.1535%" y="847.50">`0x7FF8157E01EB</text></g><g><title>`0x7FF8157D84B5 (1 samples, 1.23%)</title><rect x="90.1235%" y="821" width="1.2346%" height="15" fill="rgb(218,133,21)" fg:x="73" fg:w="1"/><text x="90.1535%" y="831.50">`0x7FF8157D84B5</text></g><g><title>`0x7FF815819FBE (1 samples, 1.23%)</title><rect x="90.1235%" y="805" width="1.2346%" height="15" fill="rgb(221,193,43)" fg:x="73" fg:w="1"/><text x="90.1535%" y="815.50">`0x7FF815819FBE</text></g><g><title>`0x7FF81581A2A0 (1 samples, 1.23%)</title><rect x="90.1235%" y="789" width="1.2346%" height="15" fill="rgb(240,128,52)" fg:x="73" fg:w="1"/><text x="90.1535%" y="799.50">`0x7FF81581A2A0</text></g><g><title>`0x7FF81581A32A (1 samples, 1.23%)</title><rect x="90.1235%" y="773" width="1.2346%" height="15" fill="rgb(253,114,12)" fg:x="73" fg:w="1"/><text x="90.1535%" y="783.50">`0x7FF81581A32A</text></g><g><title>`0x7FF81576C933 (1 samples, 1.23%)</title><rect x="90.1235%" y="757" width="1.2346%" height="15" fill="rgb(215,223,47)" fg:x="73" fg:w="1"/><text x="90.1535%" y="767.50">`0x7FF81576C933</text></g><g><title>`0x7FF817C3B44D (1 samples, 1.23%)</title><rect x="90.1235%" y="741" width="1.2346%" height="15" fill="rgb(248,225,23)" fg:x="73" fg:w="1"/><text x="90.1535%" y="751.50">`0x7FF817C3B44D</text></g><g><title>`0x7FF817C3DBFA (1 samples, 1.23%)</title><rect x="90.1235%" y="725" width="1.2346%" height="15" fill="rgb(250,108,0)" fg:x="73" fg:w="1"/><text x="90.1535%" y="735.50">`0x7FF817C3DBFA</text></g><g><title>`0x7FF817C1E37B (1 samples, 1.23%)</title><rect x="90.1235%" y="709" width="1.2346%" height="15" fill="rgb(228,208,7)" fg:x="73" fg:w="1"/><text x="90.1535%" y="719.50">`0x7FF817C1E37B</text></g><g><title>`0x7FF817C1E7DE (1 samples, 1.23%)</title><rect x="90.1235%" y="693" width="1.2346%" height="15" fill="rgb(244,45,10)" fg:x="73" fg:w="1"/><text x="90.1535%" y="703.50">`0x7FF817C1E7DE</text></g><g><title>`0x7FF817C1E92D (1 samples, 1.23%)</title><rect x="90.1235%" y="677" width="1.2346%" height="15" fill="rgb(207,125,25)" fg:x="73" fg:w="1"/><text x="90.1535%" y="687.50">`0x7FF817C1E92D</text></g><g><title>`0x7FF817CE395D (1 samples, 1.23%)</title><rect x="91.3580%" y="1061" width="1.2346%" height="15" fill="rgb(210,195,18)" fg:x="74" fg:w="1"/><text x="91.3880%" y="1071.50">`0x7FF817CE395D</text></g><g><title>`0x7FF817C270A6 (1 samples, 1.23%)</title><rect x="91.3580%" y="1045" width="1.2346%" height="15" fill="rgb(249,80,12)" fg:x="74" fg:w="1"/><text x="91.3880%" y="1055.50">`0x7FF817C270A6</text></g><g><title>`0x7FF817C201FD (1 samples, 1.23%)</title><rect x="91.3580%" y="1029" width="1.2346%" height="15" fill="rgb(221,65,9)" fg:x="74" fg:w="1"/><text x="91.3880%" y="1039.50">`0x7FF817C201FD</text></g><g><title>`0x7FF817C20446 (1 samples, 1.23%)</title><rect x="91.3580%" y="1013" width="1.2346%" height="15" fill="rgb(235,49,36)" fg:x="74" fg:w="1"/><text x="91.3880%" y="1023.50">`0x7FF817C20446</text></g><g><title>`0x7FF817C418A5 (1 samples, 1.23%)</title><rect x="91.3580%" y="997" width="1.2346%" height="15" fill="rgb(225,32,20)" fg:x="74" fg:w="1"/><text x="91.3880%" y="1007.50">`0x7FF817C418A5</text></g><g><title>`0x7FF817CE3970 (1 samples, 1.23%)</title><rect x="92.5926%" y="1061" width="1.2346%" height="15" fill="rgb(215,141,46)" fg:x="75" fg:w="1"/><text x="92.6226%" y="1071.50">`0x7FF817CE3970</text></g><g><title>`0x7FF817C8C44D (1 samples, 1.23%)</title><rect x="92.5926%" y="1045" width="1.2346%" height="15" fill="rgb(250,160,47)" fg:x="75" fg:w="1"/><text x="92.6226%" y="1055.50">`0x7FF817C8C44D</text></g><g><title>`0x7FF817CAD884 (1 samples, 1.23%)</title><rect x="92.5926%" y="1029" width="1.2346%" height="15" fill="rgb(216,222,40)" fg:x="75" fg:w="1"/><text x="92.6226%" y="1039.50">`0x7FF817CAD884</text></g><g><title>`0x7FF817C24AAA (1 samples, 1.23%)</title><rect x="93.8272%" y="997" width="1.2346%" height="15" fill="rgb(234,217,39)" fg:x="76" fg:w="1"/><text x="93.8572%" y="1007.50">`0x7FF817C24AAA</text></g><g><title>`0x7FF817C24D42 (1 samples, 1.23%)</title><rect x="93.8272%" y="981" width="1.2346%" height="15" fill="rgb(207,178,40)" fg:x="76" fg:w="1"/><text x="93.8572%" y="991.50">`0x7FF817C24D42</text></g><g><title>`0x7FF817CADAA4 (1 samples, 1.23%)</title><rect x="93.8272%" y="965" width="1.2346%" height="15" fill="rgb(221,136,13)" fg:x="76" fg:w="1"/><text x="93.8572%" y="975.50">`0x7FF817CADAA4</text></g><g><title>`0x7FF817CE3C2D (2 samples, 2.47%)</title><rect x="93.8272%" y="1061" width="2.4691%" height="15" fill="rgb(249,199,10)" fg:x="76" fg:w="2"/><text x="93.8572%" y="1071.50">`0x7FF817CE3C2D</text></g><g><title>`0x7FF817C27B29 (2 samples, 2.47%)</title><rect x="93.8272%" y="1045" width="2.4691%" height="15" fill="rgb(249,222,13)" fg:x="76" fg:w="2"/><text x="93.8572%" y="1055.50">`0x7FF817C27B29</text></g><g><title>`0x7FF817C288A8 (2 samples, 2.47%)</title><rect x="93.8272%" y="1029" width="2.4691%" height="15" fill="rgb(244,185,38)" fg:x="76" fg:w="2"/><text x="93.8572%" y="1039.50">`0x7FF817C288A8</text></g><g><title>`0x7FF817C24479 (2 samples, 2.47%)</title><rect x="93.8272%" y="1013" width="2.4691%" height="15" fill="rgb(236,202,9)" fg:x="76" fg:w="2"/><text x="93.8572%" y="1023.50">`0x7FF817C24479</text></g><g><title>`0x7FF817C24BCF (1 samples, 1.23%)</title><rect x="95.0617%" y="997" width="1.2346%" height="15" fill="rgb(250,229,37)" fg:x="77" fg:w="1"/><text x="95.0917%" y="1007.50">`0x7FF817C24BCF</text></g><g><title>`0x7FF817C1FA99 (1 samples, 1.23%)</title><rect x="95.0617%" y="981" width="1.2346%" height="15" fill="rgb(206,174,23)" fg:x="77" fg:w="1"/><text x="95.0917%" y="991.50">`0x7FF817C1FA99</text></g><g><title>`0x7FF817C206E7 (1 samples, 1.23%)</title><rect x="95.0617%" y="965" width="1.2346%" height="15" fill="rgb(211,33,43)" fg:x="77" fg:w="1"/><text x="95.0917%" y="975.50">`0x7FF817C206E7</text></g><g><title>`0x7FF817C7D08A (1 samples, 1.23%)</title><rect x="96.2963%" y="1029" width="1.2346%" height="15" fill="rgb(245,58,50)" fg:x="78" fg:w="1"/><text x="96.3263%" y="1039.50">`0x7FF817C7D08A</text></g><g><title>`0x7FF817C7D2F7 (1 samples, 1.23%)</title><rect x="96.2963%" y="1013" width="1.2346%" height="15" fill="rgb(244,68,36)" fg:x="78" fg:w="1"/><text x="96.3263%" y="1023.50">`0x7FF817C7D2F7</text></g><g><title>`0x7FF817C29A1D (1 samples, 1.23%)</title><rect x="96.2963%" y="997" width="1.2346%" height="15" fill="rgb(232,229,15)" fg:x="78" fg:w="1"/><text x="96.3263%" y="1007.50">`0x7FF817C29A1D</text></g><g><title>`0x7FF8156D8C5E (1 samples, 1.23%)</title><rect x="96.2963%" y="981" width="1.2346%" height="15" fill="rgb(254,30,23)" fg:x="78" fg:w="1"/><text x="96.3263%" y="991.50">`0x7FF8156D8C5E</text></g><g><title>`0x7FF8156B85FD (1 samples, 1.23%)</title><rect x="96.2963%" y="965" width="1.2346%" height="15" fill="rgb(235,160,14)" fg:x="78" fg:w="1"/><text x="96.3263%" y="975.50">`0x7FF8156B85FD</text></g><g><title>`0x7FF8156B88F1 (1 samples, 1.23%)</title><rect x="96.2963%" y="949" width="1.2346%" height="15" fill="rgb(212,155,44)" fg:x="78" fg:w="1"/><text x="96.3263%" y="959.50">`0x7FF8156B88F1</text></g><g><title>`0x7FF817CAD7E4 (1 samples, 1.23%)</title><rect x="96.2963%" y="933" width="1.2346%" height="15" fill="rgb(226,2,50)" fg:x="78" fg:w="1"/><text x="96.3263%" y="943.50">`0x7FF817CAD7E4</text></g><g><title>`0x7FF817CE3D72 (2 samples, 2.47%)</title><rect x="96.2963%" y="1061" width="2.4691%" height="15" fill="rgb(234,177,6)" fg:x="78" fg:w="2"/><text x="96.3263%" y="1071.50">`0x7FF817CE3D72</text></g><g><title>`0x7FF817C7D110 (2 samples, 2.47%)</title><rect x="96.2963%" y="1045" width="2.4691%" height="15" fill="rgb(217,24,9)" fg:x="78" fg:w="2"/><text x="96.3263%" y="1055.50">`0x7FF817C7D110</text></g><g><title>`0x7FF817C7D110 (1 samples, 1.23%)</title><rect x="97.5309%" y="1029" width="1.2346%" height="15" fill="rgb(220,13,46)" fg:x="79" fg:w="1"/><text x="97.5609%" y="1039.50">`0x7FF817C7D110</text></g><g><title>`0x7FF817C7D08A (1 samples, 1.23%)</title><rect x="97.5309%" y="1013" width="1.2346%" height="15" fill="rgb(239,221,27)" fg:x="79" fg:w="1"/><text x="97.5609%" y="1023.50">`0x7FF817C7D08A</text></g><g><title>`0x7FF817C7D2F7 (1 samples, 1.23%)</title><rect x="97.5309%" y="997" width="1.2346%" height="15" fill="rgb(222,198,25)" fg:x="79" fg:w="1"/><text x="97.5609%" y="1007.50">`0x7FF817C7D2F7</text></g><g><title>`0x7FF817C29A1D (1 samples, 1.23%)</title><rect x="97.5309%" y="981" width="1.2346%" height="15" fill="rgb(211,99,13)" fg:x="79" fg:w="1"/><text x="97.5609%" y="991.50">`0x7FF817C29A1D</text></g><g><title>`0x7FF8155B6216 (1 samples, 1.23%)</title><rect x="97.5309%" y="965" width="1.2346%" height="15" fill="rgb(232,111,31)" fg:x="79" fg:w="1"/><text x="97.5609%" y="975.50">`0x7FF8155B6216</text></g><g><title>`0x7FF8155B7730 (1 samples, 1.23%)</title><rect x="97.5309%" y="949" width="1.2346%" height="15" fill="rgb(245,82,37)" fg:x="79" fg:w="1"/><text x="97.5609%" y="959.50">`0x7FF8155B7730</text></g><g><title>`0x7FF8155A710E (1 samples, 1.23%)</title><rect x="97.5309%" y="933" width="1.2346%" height="15" fill="rgb(227,149,46)" fg:x="79" fg:w="1"/><text x="97.5609%" y="943.50">`0x7FF8155A710E</text></g><g><title>`0x7FF8155A7214 (1 samples, 1.23%)</title><rect x="97.5309%" y="917" width="1.2346%" height="15" fill="rgb(218,36,50)" fg:x="79" fg:w="1"/><text x="97.5609%" y="927.50">`0x7FF8155A7214</text></g><g><title>`0x7FF8155A76CC (1 samples, 1.23%)</title><rect x="97.5309%" y="901" width="1.2346%" height="15" fill="rgb(226,80,48)" fg:x="79" fg:w="1"/><text x="97.5609%" y="911.50">`0x7FF8155A76CC</text></g><g><title>`0x7FF8155A7980 (1 samples, 1.23%)</title><rect x="97.5309%" y="885" width="1.2346%" height="15" fill="rgb(238,224,15)" fg:x="79" fg:w="1"/><text x="97.5609%" y="895.50">`0x7FF8155A7980</text></g><g><title>`0x7FF8155A7B11 (1 samples, 1.23%)</title><rect x="97.5309%" y="869" width="1.2346%" height="15" fill="rgb(241,136,10)" fg:x="79" fg:w="1"/><text x="97.5609%" y="879.50">`0x7FF8155A7B11</text></g><g><title>`0x7FF8155A7F07 (1 samples, 1.23%)</title><rect x="97.5309%" y="853" width="1.2346%" height="15" fill="rgb(208,32,45)" fg:x="79" fg:w="1"/><text x="97.5609%" y="863.50">`0x7FF8155A7F07</text></g><g><title>`0x7FF8155A8137 (1 samples, 1.23%)</title><rect x="97.5309%" y="837" width="1.2346%" height="15" fill="rgb(207,135,9)" fg:x="79" fg:w="1"/><text x="97.5609%" y="847.50">`0x7FF8155A8137</text></g><g><title>`0x7FF8157452CB (1 samples, 1.23%)</title><rect x="97.5309%" y="821" width="1.2346%" height="15" fill="rgb(206,86,44)" fg:x="79" fg:w="1"/><text x="97.5609%" y="831.50">`0x7FF8157452CB</text></g><g><title>`0x7FF815767BD5 (1 samples, 1.23%)</title><rect x="97.5309%" y="805" width="1.2346%" height="15" fill="rgb(245,177,15)" fg:x="79" fg:w="1"/><text x="97.5609%" y="815.50">`0x7FF815767BD5</text></g><g><title>`0x7FF815767E6E (1 samples, 1.23%)</title><rect x="97.5309%" y="789" width="1.2346%" height="15" fill="rgb(206,64,50)" fg:x="79" fg:w="1"/><text x="97.5609%" y="799.50">`0x7FF815767E6E</text></g><g><title>`0x7FF817CAD7E4 (1 samples, 1.23%)</title><rect x="97.5309%" y="773" width="1.2346%" height="15" fill="rgb(234,36,40)" fg:x="79" fg:w="1"/><text x="97.5609%" y="783.50">`0x7FF817CAD7E4</text></g><g><title>all (81 samples, 100%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(213,64,8)" fg:x="0" fg:w="81"/><text x="0.0300%" y="1135.50"></text></g><g><title>`0x7FF817C85C1E (19 samples, 23.46%)</title><rect x="76.5432%" y="1109" width="23.4568%" height="15" fill="rgb(210,75,36)" fg:x="62" fg:w="19"/><text x="76.5732%" y="1119.50">`0x7FF817C85C1E</text></g><g><title>`0x7FF817C85C73 (19 samples, 23.46%)</title><rect x="76.5432%" y="1093" width="23.4568%" height="15" fill="rgb(229,88,21)" fg:x="62" fg:w="19"/><text x="76.5732%" y="1103.50">`0x7FF817C85C73</text></g><g><title>`0x7FF817C85DEB (19 samples, 23.46%)</title><rect x="76.5432%" y="1077" width="23.4568%" height="15" fill="rgb(252,204,47)" fg:x="62" fg:w="19"/><text x="76.5732%" y="1087.50">`0x7FF817C85DEB</text></g><g><title>`0x7FF817CE3D9E (1 samples, 1.23%)</title><rect x="98.7654%" y="1061" width="1.2346%" height="15" fill="rgb(208,77,27)" fg:x="80" fg:w="1"/><text x="98.7954%" y="1071.50">`0x7FF817CE3D9E</text></g><g><title>`0x7FF817C77B8C (1 samples, 1.23%)</title><rect x="98.7654%" y="1045" width="1.2346%" height="15" fill="rgb(221,76,26)" fg:x="80" fg:w="1"/><text x="98.7954%" y="1055.50">`0x7FF817C77B8C</text></g><g><title>`0x7FF817C77B4D (1 samples, 1.23%)</title><rect x="98.7654%" y="1029" width="1.2346%" height="15" fill="rgb(225,139,18)" fg:x="80" fg:w="1"/><text x="98.7954%" y="1039.50">`0x7FF817C77B4D</text></g><g><title>`0x7FF817C77C31 (1 samples, 1.23%)</title><rect x="98.7654%" y="1013" width="1.2346%" height="15" fill="rgb(230,137,11)" fg:x="80" fg:w="1"/><text x="98.7954%" y="1023.50">`0x7FF817C77C31</text></g></svg></svg>